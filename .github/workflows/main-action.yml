name: main-action

on:
  pull_request:
    branches:
      - main

jobs:
  get_tag:
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout repository
        uses: action/checkout@v4
        with:
          fetch-depth: 0
      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=${latest_tag}" >> $GITHUB_OUTPUT

  sonarqube-check:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  blackduck-scan:
    permissions:
      contents: read
      pull-requests: write
    needs: [sonarqube-check, get_tag]
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Run Blackudck Scan
        id: black-duck-sca-scan
        uses: blackduck-inc/black-duck-security-scan@v2
        env:
          DETECT_PROJECT_NAME: ${{ github.event.repository.name }}
        with:
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          detect_search_depth: 10
          blackducksca_scan_full: true
          detect_args: |
            --detect.excluded.detector.types=GIT
            --blackduck.trust.cert=true
            --detect.accuracy.required=NONE 
            --detect.project.version.name=${{ needs.get_tag.outputs.latest_tag }}

  docker-deploy:
    permissions:
      contents: read
      pull-requests: write
    needs: blackduck-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Web Image
        run: |
          IMAGE_TAG=${{ needs.get_tag.outputs.latest_tag }}
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/asset-web:$IMAGE_TAG
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

  trivy-scan:
    permissions:
      contents: read
      pull-requests: write
    needs: docker-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/asset-web:${{ needs.get_tag.outputs.latest_tag }}
          format: "table"
          exit-code: "0"
          ignore-unfixed: false
          severity: "CRITICAL,HIGH,MEDIUM"
          vuln-type: "os,library"
